"""add tag model

Revision ID: 3909ec2b2bf4
Revises: 054dbbb5df4e
Create Date: 2025-09-11 17:42:37.961120

"""
from typing import Sequence, Union
from uuid import uuid4

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlmodel.sql.sqltypes import AutoString
from app.database.models import TagName

# revision identifiers, used by Alembic.
revision: str = '3909ec2b2bf4'
down_revision: Union[str, Sequence[str], None] = '054dbbb5df4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('name', sa.Enum('EXPRESS', 'STANDARD', 'FRAGILE', 'HEAVY', 'INTERNATIONAL', 'DOMESTIC', 'TEMPERATURE_CONTROLLED', 'GIFT', 'RETURN', 'DOCUMENTS', name='tagname'), nullable=False),
    sa.Column('instruction', AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipment_tag',
    sa.Column('shipment_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['shipment_id'], ['shipment.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('shipment_id', 'tag_id')
    )
    # ### end Alembic commands ###

    # Insert tag data
    tag_table = sa.table(
        'tag',
        sa.Column('id', sa.UUID),
        sa.Column('name', sa.Enum('EXPRESS', 'STANDARD', 'FRAGILE', 'HEAVY', 'INTERNATIONAL', 
                                 'DOMESTIC', 'TEMPERATURE_CONTROLLED', 'GIFT', 'RETURN', 'DOCUMENTS', 
                                 name='tagname')),
        sa.Column('instruction', sa.Text())
    )
    
    op.bulk_insert(
        tag_table,
        [
            {'id': str(uuid4()), 'name': 'EXPRESS', 'instruction': 'Handle with priority. Ensure fastest delivery possible.'},
            {'id': str(uuid4()), 'name': 'STANDARD', 'instruction': 'Regular handling and delivery process.'},
            {'id': str(uuid4()), 'name': 'FRAGILE', 'instruction': 'Handle with care. Package contains fragile items.'},
            {'id': str(uuid4()), 'name': 'HEAVY', 'instruction': 'Use appropriate equipment for handling heavy packages.'},
            {'id': str(uuid4()), 'name': 'INTERNATIONAL', 'instruction': 'Follow international shipping regulations and customs procedures.'},
            {'id': str(uuid4()), 'name': 'DOMESTIC', 'instruction': 'Domestic shipping rules apply.'},
            {'id': str(uuid4()), 'name': 'TEMPERATURE_CONTROLLED', 'instruction': 'Maintain specified temperature range during transit.'},
            {'id': str(uuid4()), 'name': 'GIFT', 'instruction': 'Special gift wrapping and handling required.'},
            {'id': str(uuid4()), 'name': 'RETURN', 'instruction': 'This is a return shipment. Follow return procedures.'},
            {'id': str(uuid4()), 'name': 'DOCUMENTS', 'instruction': 'Contains important documents. Handle with care and ensure secure delivery.'}
        ]
    )
    


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shipment_tag')
    op.drop_table('tag')
    # ### end Alembic commands ###
